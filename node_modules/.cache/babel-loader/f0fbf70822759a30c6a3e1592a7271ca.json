{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/AddTrip/AddTripForm.js\";\nimport React, { Component } from 'react';\nimport './AddTrip.css';\nimport '../Font/Font.css';\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { NavLink } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport Moment from 'react-moment';\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nclass AddTripForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: \"\",\n      endDate: \"\"\n    };\n  }\n\n  render() {\n    const moment = require('moment');\n\n    const onSubmitForm = e => {\n      e.preventDefault();\n      let tripId = uuidv4();\n      let iframe = e.target.tripURL.value;\n      let tripName = e.target.tripName.value;\n      var re = /:\\s|,\\s/;\n      let tripTravelers = e.target.tripTravelers.value.split(re);\n\n      const getDates = () => {\n        var dateArray = [];\n        var currentDate = moment(e.target.startDate.value);\n        var endDate = moment(e.target.endDate.value);\n\n        while (currentDate <= endDate) {\n          dateArray.push(moment(currentDate).format());\n          currentDate = moment(currentDate).add(1, 'd');\n        }\n\n        return dateArray;\n      };\n\n      let tripDates = [getDates()];\n      const startDate = this.state.startDate;\n      const endDate = this.state.endDate;\n\n      if (moment(endDate).isBefore(moment(startDate)) == true) {\n        this.props.routerProps.history.push(\"/\");\n      } else this.props.handleAddTrip(tripId, iframe, tripName, tripTravelers, tripDates) || this.props.routerProps.history.push(\"/my-trips\");\n    };\n\n    const createStartDate = startDate => {\n      this.setState({\n        startDate: startDate\n      });\n    };\n\n    const createEndDate = endDate => {\n      this.setState({\n        endDate: endDate\n      });\n    };\n\n    const validateDate = () => {\n      const startDate = this.state.startDate;\n      const endDate = this.state.endDate;\n\n      try {\n        if (moment(endDate).isBefore(moment(startDate)) == true) throw \"hmmm...end date should be later than current date\";\n      } catch (err) {\n        return err;\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-shoe-prints\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 34\n      }\n    }), \" Plan a trip!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-trip-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-feather white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 85\n      }\n    }, \"New trip name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"tripName\",\n      className: \"skinBackground black search\",\n      id: \"new-trip-name\",\n      placeholder: \"Escalante\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"start-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 46\n      }\n    }, \"Start date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"startDate\",\n      id: \"start-date\",\n      onChange: e => createStartDate(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"end-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 44\n      }\n    }, \"End date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"endDate\",\n      id: \"end-date\",\n      onChange: e => createEndDate(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error cloudBlue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, validateDate()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"traveler-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-user-friends white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 91\n      }\n    }, \"Traveler names\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"tripTravelers\",\n      className: \"skinBackground purple names\",\n      placeholder: \"Stef, Jack, Emi, Marielle...\",\n      id: \"traveler-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"map-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-drafting-compass white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 90\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://www.google.com/maps\",\n      target: \"_blank\",\n      className: \"white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 130\n      }\n    }, \"Location URL\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      name: \"tripURL\",\n      className: \"skinBackground purple names\",\n      defaultValue: \"https://earth.google.com/\",\n      id: \"map-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(GoButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nAddTripForm.propTypes = {\n  startDate: \"\",\n  endDate: \"\"\n};\nexport default withRouter(AddTripForm);","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/AddTrip/AddTripForm.js"],"names":["React","Component","GoButton","NavLink","v4","uuidv4","Moment","withRouter","PropTypes","AddTripForm","constructor","props","state","startDate","endDate","render","moment","require","onSubmitForm","e","preventDefault","tripId","iframe","target","tripURL","value","tripName","re","tripTravelers","split","getDates","dateArray","currentDate","push","format","add","tripDates","isBefore","routerProps","history","handleAddTrip","createStartDate","setState","createEndDate","validateDate","err","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './AddTrip.css';\nimport '../Font/Font.css';\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { NavLink} from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport Moment from 'react-moment';\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nclass AddTripForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          startDate: \"\",\n          endDate: \"\"\n        }\n      }\n      \n      \n\n\n  \n  render() {\n\n    const moment= require('moment') \n    \n    const onSubmitForm = (e) => {\n\n      e.preventDefault();\n      let tripId = uuidv4()\n      let iframe =e.target.tripURL.value\n      let tripName = e.target.tripName.value\n      var re = /:\\s|,\\s/;\n      let tripTravelers = e.target.tripTravelers.value.split(re)\n\n      const  getDates = () => {\n        var dateArray = [];\n        var currentDate = moment(e.target.startDate.value)\n        var endDate = moment(e.target.endDate.value)\n        \n\n        while (currentDate <= endDate) {\n            dateArray.push(moment(currentDate).format())\n            currentDate = moment(currentDate).add(1, 'd');\n        }\n        return dateArray;\n   } \n   \n   let tripDates = [getDates()]\n\n\n   const startDate = this.state.startDate\n   const endDate = this.state.endDate\n\n   if (moment(endDate).isBefore(moment(startDate)) == true)\n   {this.props.routerProps.history.push(\"/\")\n}\n   else this.props.handleAddTrip(tripId, iframe, tripName, tripTravelers, tripDates) ||\n    this.props.routerProps.history.push(\"/my-trips\");\n      \n      \n    }\n    \n    const createStartDate = (startDate) =>{\n        this.setState({\n            startDate: startDate,\n        });\n      }\n\n\n    const createEndDate = (endDate) =>{\n    this.setState({\n        endDate: endDate,\n    });\n    }\n\n\n    \n\n\n    const validateDate = () => {\n        \n        const startDate = this.state.startDate\n        \n        const endDate = this.state.endDate\n      \n        try {\n        if (moment(endDate).isBefore(moment(startDate)) == true)\n          throw \"hmmm...end date should be later than current date\"\n        }\n        catch(err) {\n            return err;\n          }\n\n      }\n\n    return (\n        <form onSubmit={onSubmitForm}>\n         <h2 className = \"white\"><i class=\"fas fa-shoe-prints\"></i> Plan a trip!</h2>\n            <div className= \"labelWidthPlan\">\n                <label htmlFor= \"new-trip-name\"><i class=\"fas fa-feather white\"></i><span className= \"labelWidthPlan white montebello\">New trip name</span>\n                    <input type=\"text\" name=\"tripName\" className=\"skinBackground black search\" id= \"new-trip-name\" placeholder=\"Escalante\" required/>\n                </label>\n            </div>\n\n            <div className= \"labelWidthPlan\">\n                <label htmlFor= \"start-date\"><span className= \"labelWidthPlan white montebello\">Start date</span>\n                <input type=\"date\" name=\"startDate\" id= \"start-date\"\n                onChange={e => createStartDate(e.target.value)}\n                \n                /> </label> <br></br>\n                \n                \n                <label htmlFor= \"end-date\"><span className= \"labelWidthPlan white montebello\">End date</span>\n                <input type=\"date\" name=\"endDate\" id= \"end-date\"\n                onChange={e => createEndDate(e.target.value)}\n                /><span className = \"error cloudBlue\">{validateDate()}</span></label>\n    \n                            \n            </div>\n\n            <div className= \"labelWidthPlan\">\n                 <label htmlFor= \"traveler-name\"><i class=\"fas fa-user-friends white\"></i><span className= \"labelWidthPlan white montebello\">Traveler names</span>\n                 <input type=\"text\" name=\"tripTravelers\" className= \"skinBackground purple names\" placeholder = \"Stef, Jack, Emi, Marielle...\" id= \"traveler-name\"/>  \n                </label>\n            </div>\n\n            <div className= \"labelWidthPlan\">\n                 <label htmlFor= \"map-link\"><i class=\"fas fa-drafting-compass white\"></i><span className= \"labelWidthPlan white\"><a href= \"https://www.google.com/maps\" target= \"_blank\"  className= \"white montebello\">Location URL</a></span>\n                 <input type=\"url\" name=\"tripURL\" className= \"skinBackground purple names\" defaultValue = \"https://earth.google.com/\" id= \"map-link\"/>  \n                </label>\n            </div>\n\n            <GoButton/>\n   \n        </form>\n        \n   )}\n  \n}\n\nAddTripForm.propTypes = {\n    startDate: \"\",\n    endDate: \"\"\n}\n\n\nexport default withRouter(AddTripForm)"]},"metadata":{},"sourceType":"module"}