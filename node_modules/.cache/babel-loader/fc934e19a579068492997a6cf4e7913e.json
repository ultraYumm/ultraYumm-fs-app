{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/AddTrip/EditTripForm.js\";\nimport React, { Component } from 'react';\nimport '../Font/Font.css';\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { withRouter } from \"react-router-dom\";\nimport config from \"../config\";\nimport { TRIPS } from \"../Defaults\";\nimport { Auth } from 'aws-amplify';\nimport Moment from 'react-moment';\n\nclass EditTripForm extends Component {\n  constructor(props) {\n    super(props);\n    const selectedTrip = this.props.selectedTrip;\n    this.state = {\n      startDate: null,\n      endDate: null,\n      name: TRIPS[0].name,\n      id: \"\",\n      username: \"\",\n      selectedTrip: selectedTrip.length === 0 ? TRIPS[0] : selectedTrip\n    };\n  }\n\n  componentDidMount() {\n    Auth.currentAuthenticatedUser().then(user => {\n      let id = user.attributes.sub;\n      let username = user.username;\n      this.props.getUser(id, username);\n      this.setState({\n        id,\n        username\n      });\n    });\n  }\n\n  render() {\n    const moment = require('moment');\n\n    const re = /:\\s|\\s/;\n    const userid = this.state.id;\n\n    const onSubmitForm = e => {\n      e.preventDefault();\n      let iframe = e.target.tripURL.value;\n      let tripName = e.target.tripName.value;\n      let tripTravelers = e.target.tripTravelers.value.split(re);\n\n      const getDates = () => {\n        var dateArray = [];\n        var currentDate = moment(e.target.startDate.value);\n        var endDate = moment(e.target.endDate.value);\n\n        while (currentDate <= endDate) {\n          dateArray.push(moment(currentDate).format());\n          currentDate = moment(currentDate).add(1, 'd');\n        }\n\n        return dateArray;\n      };\n\n      let tripDates = [getDates()];\n      const inputValues = {\n        name: tripName,\n        iframe: iframe,\n        traveler_names: tripTravelers,\n        trip_dates: tripDates[0],\n        userid: userid\n      };\n      const API = config.API_UY_ENDPOINT;\n      const endpoint = config.endpointT;\n      const url = API + endpoint + `${this.state.selectedTrip[0].id}`;\n      console.log(url);\n      const API_TOKEN = config.API_UY_KEY;\n      fetch(url, {\n        method: this.props.method,\n        body: JSON.stringify(inputValues),\n        headers: {\n          'content-type': 'application/json',\n          'authorization': `bearer ${API_TOKEN}`\n        }\n      }).then(res => {\n        if (!res.ok) {\n          // get the error message from the response\n          return res.json().then(error => {\n            // then throw it\n            throw error;\n          });\n        }\n\n        this.props.handleAddTrip(iframe, tripName, tripTravelers, tripDates, userid);\n        this.props.getTrips(e);\n      });\n      this.props.routerProps.history.push(\"/my-trips\");\n    };\n\n    const createStartDate = startDate => {\n      this.setState({\n        startDate: startDate\n      });\n    };\n\n    const createEndDate = endDate => {\n      this.setState({\n        endDate: endDate\n      });\n    };\n\n    const validateDate = () => {\n      const startDate = this.state.startDate;\n      const endDate = this.state.endDate;\n      if (moment(endDate).isBefore(moment(startDate)) === true) return \" hmmm...end date should be later than current date\";\n    };\n\n    const createTripName = name => {\n      this.setState({\n        name: name\n      });\n    };\n\n    const createTravNames = names => {\n      this.setState({\n        traveler_names: names\n      });\n    };\n\n    const travNames = this.state.traveler_names;\n\n    const checkDupes = () => {\n      if (travNames) {\n        const arr = travNames.split(re);\n        let duplicate = arr.reduce((acc, currentValue, index, array) => {\n          if (array.indexOf(currentValue) !== index && !acc.includes(currentValue)) acc.push(currentValue);\n          return acc;\n        }, []);\n\n        if (duplicate.length > 0) {\n          return 'please pick a unique name for the one and only ' + duplicate.join(',');\n        }\n      } else return \"\";\n    };\n\n    const tripName = this.state.name;\n    const selectedTrip = this.state.selectedTrip;\n    console.log(\"selectedTrip\", selectedTrip);\n    console.log(\"selectedTripdatelenght\", selectedTrip[0].trip_dates.length);\n    const datesArray = selectedTrip[0].trip_dates.toString().replace('{', \"\").replace(\"}\", \"\").replace(/\"/g, \"\").replace(\"\", \"\").replace(/\\s+/g, \"\").trim().split(',');\n    console.log(datesArray[0]);\n    const currentStartDate = /*#__PURE__*/React.createElement(Moment, {\n      format: \"MM/DD/YY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 28\n      }\n    }, datesArray[0]);\n    const currentEndDate = /*#__PURE__*/React.createElement(Moment, {\n      format: \"MM/DD/YY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 26\n      }\n    }, datesArray.pop());\n\n    const validateTripName = () => {\n      if (this.props.trips.find(trip => trip.name === tripName)) {\n        return ` ${tripName} already exists, please create a different name`;\n      } else return \"\";\n    };\n\n    const nameCheck = () => this.props.trips.map(trip => trip.name === tripName);\n\n    const checkArray = nameCheck();\n    const dupName = checkArray.includes(true);\n    const startDate = this.state.startDate;\n    const endDate = this.state.endDate;\n\n    const dateCheck = () => moment(endDate).isBefore(moment(startDate)) === true;\n\n    const backDates = dateCheck();\n\n    const error = () => {\n      \"duplicate trip name or backwards dates\";\n    };\n\n    const getTrips = this.props.getTrips;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"myPlans\",\n      onSubmit: dupName | backDates === true ? error : onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-seedling\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }), \"\\xA0\", this.props.text, \"\\xA0\", /*#__PURE__*/React.createElement(GoButton, {\n      username: this.props.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 97\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      onMouseOver: getTrips,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-trip-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-feather white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 90\n      }\n    }, \"New trip name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"tripName\",\n      maxLength: \"18\",\n      className: \"skinBackground black search\",\n      id: \"new-trip-name\",\n      defaultValue: selectedTrip.length === 0 ? TRIPS[0].name : selectedTrip[0].name,\n      required: true,\n      onChange: e => createTripName(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error cloudBlue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }, validateTripName()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"traveler-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-user-friends white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 96\n      }\n    }, \"Traveler names\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"tripTravelers\",\n      className: \"skinBackground purple names\",\n      defaultValue: selectedTrip.length === 0 ? TRIPS[0].traveler_names : selectedTrip[0].traveler_names.toString().replace('{', \"\").replace(\"}\", \"\").replace(/\"/g, \"\").replace(\"\", \"\").replace(/\\s+/g, \"\").replace(/,/g, \" \").trim().split(','),\n      id: \"traveler-name\",\n      onChange: e => createTravNames(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error cloudBlue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 20\n      }\n    }, checkDupes()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"map-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-drafting-compass white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 95\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://www.google.com/\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 135\n      }\n    }, \"Website\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      name: \"tripURL\",\n      className: \"skinBackground purple names\",\n      defaultValue: selectedTrip[0].iframe,\n      id: \"map-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthDates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"start-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"white montebello labelWidthPlan \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 34\n      }\n    }, \"Start date\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 96\n      }\n    }), \":\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 116\n      }\n    }, selectedTrip[0].trip_dates.length < 3 ? \"none set\" : currentStartDate)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"startDate\",\n      id: \"start-date\",\n      onChange: e => createStartDate(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }), \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthDates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"end-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"white montebello labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 44\n      }\n    }, \"End date\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 103\n      }\n    }), \":\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 123\n      }\n    }, selectedTrip[0].trip_dates.length < 3 ? \"none set\" : currentEndDate)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"endDate\",\n      id: \"end-date\",\n      onChange: e => createEndDate(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error cloudBlue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }\n    }, validateDate())))));\n  }\n\n}\n\nEditTripForm.defaultProps = {\n  trips: [],\n  selectedTrip: TRIPS[0],\n  name: TRIPS[0].name\n};\nexport default withRouter(EditTripForm);","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/AddTrip/EditTripForm.js"],"names":["React","Component","GoButton","withRouter","config","TRIPS","Auth","Moment","EditTripForm","constructor","props","selectedTrip","state","startDate","endDate","name","id","username","length","componentDidMount","currentAuthenticatedUser","then","user","attributes","sub","getUser","setState","render","moment","require","re","userid","onSubmitForm","e","preventDefault","iframe","target","tripURL","value","tripName","tripTravelers","split","getDates","dateArray","currentDate","push","format","add","tripDates","inputValues","traveler_names","trip_dates","API","API_UY_ENDPOINT","endpoint","endpointT","url","console","log","API_TOKEN","API_UY_KEY","fetch","method","body","JSON","stringify","headers","res","ok","json","error","handleAddTrip","getTrips","routerProps","history","createStartDate","createEndDate","validateDate","isBefore","createTripName","createTravNames","names","travNames","checkDupes","arr","duplicate","reduce","acc","currentValue","index","array","indexOf","includes","join","datesArray","toString","replace","trim","currentStartDate","currentEndDate","pop","validateTripName","trips","find","trip","nameCheck","map","checkArray","dupName","dateCheck","backDates","text","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,kCAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAMA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAQjCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AACA,UAAMC,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAAhC;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,OAAO,EAAG,IAFC;AAGXC,MAAAA,IAAI,EAAEV,KAAK,CAAC,CAAD,CAAL,CAASU,IAHJ;AAIXC,MAAAA,EAAE,EAAE,EAJO;AAKXC,MAAAA,QAAQ,EAAE,EALC;AAMXN,MAAAA,YAAY,EAAEA,YAAY,CAACO,MAAb,KAAwB,CAAxB,GAA2Bb,KAAK,CAAC,CAAD,CAAhC,GAAsCM;AANzC,KAAb;AASD;;AAEDQ,EAAAA,iBAAiB,GAAI;AAAEb,IAAAA,IAAI,CAACc,wBAAL,GAAgCC,IAAhC,CAAqCC,IAAI,IAAI;AAClE,UAAIN,EAAE,GAAGM,IAAI,CAACC,UAAL,CAAgBC,GAAzB;AACA,UAAIP,QAAQ,GAAGK,IAAI,CAACL,QAApB;AAEA,WAAKP,KAAL,CAAWe,OAAX,CAAmBT,EAAnB,EAAuBC,QAAvB;AAGA,WAAKS,QAAL,CAAe;AACbV,QAAAA,EADa;AAEbC,QAAAA;AAFa,OAAf;AAMD,KAbsB;AAepB;;AAEPU,EAAAA,MAAM,GAAG;AAGP,UAAMC,MAAM,GAAEC,OAAO,CAAC,QAAD,CAArB;;AAEA,UAAOC,EAAE,GAAG,QAAZ;AAEA,UAAMC,MAAM,GAAG,KAAKnB,KAAL,CAAWI,EAA1B;;AAEA,UAAMgB,YAAY,GAAIC,CAAD,IAAO;AAE1BA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIC,MAAM,GAAEF,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBC,KAA7B;AACA,UAAIC,QAAQ,GAAGN,CAAC,CAACG,MAAF,CAASG,QAAT,CAAkBD,KAAjC;AACA,UAAIE,aAAa,GAAGP,CAAC,CAACG,MAAF,CAASI,aAAT,CAAuBF,KAAvB,CAA6BG,KAA7B,CAAmCX,EAAnC,CAApB;;AAGA,YAAOY,QAAQ,GAAG,MAAM;AACtB,YAAIC,SAAS,GAAG,EAAhB;AACA,YAAIC,WAAW,GAAGhB,MAAM,CAACK,CAAC,CAACG,MAAF,CAASvB,SAAT,CAAmByB,KAApB,CAAxB;AACA,YAAIxB,OAAO,GAAGc,MAAM,CAACK,CAAC,CAACG,MAAF,CAAStB,OAAT,CAAiBwB,KAAlB,CAApB;;AAGA,eAAOM,WAAW,IAAI9B,OAAtB,EAA+B;AAC3B6B,UAAAA,SAAS,CAACE,IAAV,CAAejB,MAAM,CAACgB,WAAD,CAAN,CAAoBE,MAApB,EAAf;AACAF,UAAAA,WAAW,GAAGhB,MAAM,CAACgB,WAAD,CAAN,CAAoBG,GAApB,CAAwB,CAAxB,EAA2B,GAA3B,CAAd;AACH;;AACD,eAAOJ,SAAP;AACJ,OAXE;;AAaE,UAAIK,SAAS,GAAG,CAACN,QAAQ,EAAT,CAAhB;AAEA,YAAMO,WAAW,GAAG;AAChBlC,QAAAA,IAAI,EAAEwB,QADU;AAEhBJ,QAAAA,MAAM,EAAEA,MAFQ;AAGhBe,QAAAA,cAAc,EAAEV,aAHA;AAIhBW,QAAAA,UAAU,EAAEH,SAAS,CAAC,CAAD,CAJL;AAKhBjB,QAAAA,MAAM,EAAEA;AALQ,OAApB;AAQA,YAAMqB,GAAG,GAAGhD,MAAM,CAACiD,eAAnB;AACA,YAAMC,QAAQ,GAAGlD,MAAM,CAACmD,SAAxB;AAEA,YAAMC,GAAG,GAAGJ,GAAG,GAAGE,QAAN,GAAiB,GAAE,KAAK1C,KAAL,CAAWD,YAAX,CAAwB,CAAxB,EAA2BK,EAAG,EAA7D;AACAyC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMG,SAAS,GAAGvD,MAAM,CAACwD,UAAzB;AAEAC,MAAAA,KAAK,CAACL,GAAD,EAAM;AAEPM,QAAAA,MAAM,EAAE,KAAKpD,KAAL,CAAWoD,MAFZ;AAGPC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,WAAf,CAHC;AAIPiB,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,2BAAkB,UAASP,SAAU;AAF9B;AAJF,OAAN,CAAL,CAWCtC,IAXD,CAWM8C,GAAG,IAAI;AACb,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT;AACA,iBAAOD,GAAG,CAACE,IAAJ,GAAWhD,IAAX,CAAgBiD,KAAK,IAAI;AAChC;AACA,kBAAMA,KAAN;AACC,WAHM,CAAP;AAIH;;AAGD,aAAK5D,KAAL,CAAW6D,aAAX,CAAyBpC,MAAzB,EAAiCI,QAAjC,EAA2CC,aAA3C,EAA0DQ,SAA1D,EAAqEjB,MAArE;AAEA,aAAKrB,KAAL,CAAW8D,QAAX,CAAoBvC,CAApB;AAGC,OA1BD;AA4BA,WAAKvB,KAAL,CAAW+D,WAAX,CAAuBC,OAAvB,CAA+B7B,IAA/B,CAAoC,WAApC;AAGH,KAtED;;AAwEA,UAAM8B,eAAe,GAAI9D,SAAD,IAAc;AAClC,WAAKa,QAAL,CAAc;AACVb,QAAAA,SAAS,EAAEA;AADD,OAAd;AAGD,KAJH;;AAOA,UAAM+D,aAAa,GAAI9D,OAAD,IAAY;AAClC,WAAKY,QAAL,CAAc;AACVZ,QAAAA,OAAO,EAAEA;AADC,OAAd;AAGC,KAJD;;AAOA,UAAM+D,YAAY,GAAG,MAAM;AACvB,YAAMhE,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA7B;AACA,YAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAA3B;AACA,UAAIc,MAAM,CAACd,OAAD,CAAN,CAAgBgE,QAAhB,CAAyBlD,MAAM,CAACf,SAAD,CAA/B,MAAgD,IAApD,EACA,OAAQ,oDAAR;AAED,KANH;;AAQA,UAAMkE,cAAc,GAAIhE,IAAD,IAAS;AAC9B,WAAKW,QAAL,CAAc;AACVX,QAAAA,IAAI,EAAEA;AADI,OAAd;AAGC,KAJH;;AAMA,UAAMiE,eAAe,GAAIC,KAAD,IAAU;AAChC,WAAKvD,QAAL,CAAc;AACVwB,QAAAA,cAAc,EAAE+B;AADN,OAAd;AAGC,KAJH;;AAMA,UAAMC,SAAS,GAAG,KAAKtE,KAAL,CAAWsC,cAA7B;;AAGA,UAAMiC,UAAU,GAAG,MAAM;AAEvB,UAAID,SAAJ,EAAe;AACb,cAAME,GAAG,GAAGF,SAAS,CAACzC,KAAV,CAAgBX,EAAhB,CAAZ;AACA,YAAIuD,SAAS,GAAGD,GAAG,CAACE,MAAJ,CAAW,CAACC,GAAD,EAAKC,YAAL,EAAkBC,KAAlB,EAAyBC,KAAzB,KAAmC;AAC5D,cAAGA,KAAK,CAACC,OAAN,CAAcH,YAAd,MAA8BC,KAA9B,IAAuC,CAACF,GAAG,CAACK,QAAJ,CAAaJ,YAAb,CAA3C,EAAuED,GAAG,CAAC1C,IAAJ,CAAS2C,YAAT;AACvE,iBAAOD,GAAP;AACD,SAHe,EAGb,EAHa,CAAhB;;AAMA,YAAIF,SAAS,CAACnE,MAAV,GAAiB,CAArB,EAAwB;AAAC,iBAAQ,oDAAoDmE,SAAS,CAACQ,IAAV,CAAe,GAAf,CAA5D;AAAiF;AAE7G,OAVC,MAYK,OAAQ,EAAR;AACN,KAfD;;AAiBA,UAAMtD,QAAQ,GAAG,KAAK3B,KAAL,CAAWG,IAA5B;AAEF,UAAMJ,YAAY,GAAG,KAAKC,KAAL,CAAWD,YAAhC;AACA8C,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B/C,YAA5B;AACA8C,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC/C,YAAY,CAAC,CAAD,CAAZ,CAAgBwC,UAAhB,CAA2BjC,MAAjE;AAEA,UAAM4E,UAAU,GAAGnF,YAAY,CAAC,CAAD,CAAZ,CAAgBwC,UAAhB,CAA2B4C,QAA3B,GAAsCC,OAAtC,CAA8C,GAA9C,EAAmD,EAAnD,EAAuDA,OAAvD,CAA+D,GAA/D,EAAmE,EAAnE,EAAuEA,OAAvE,CAA+E,IAA/E,EAAoF,EAApF,EAAwFA,OAAxF,CAAgG,EAAhG,EAAmG,EAAnG,EAAuGA,OAAvG,CAA+G,MAA/G,EAAsH,EAAtH,EAA0HC,IAA1H,GAAiIxD,KAAjI,CAAuI,GAAvI,CAAnB;AAEAgB,IAAAA,OAAO,CAACC,GAAR,CAAYoC,UAAU,CAAC,CAAD,CAAtB;AAEA,UAAMI,gBAAgB,gBAAG,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BJ,UAAU,CAAC,CAAD,CAAtC,CAAzB;AACA,UAAMK,cAAc,gBAAG,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BL,UAAU,CAACM,GAAX,EAA5B,CAAvB;;AAKE,UAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAI,KAAK3F,KAAL,CAAW4F,KAAX,CAAiBC,IAAjB,CAAuBC,IAAD,IAAUA,IAAI,CAACzF,IAAL,KAAcwB,QAA9C,CAAJ,EAA4D;AAC5D,eAAS,IAAGA,QAAS,iDAArB;AAAuE,OADvE,MAEK,OAAQ,EAAR;AAEN,KALH;;AAOE,UAAMkE,SAAS,GAAG,MAAQ,KAAK/F,KAAL,CAAW4F,KAAX,CAAiBI,GAAjB,CAAsBF,IAAD,IAAUA,IAAI,CAACzF,IAAL,KAAcwB,QAA7C,CAA1B;;AACA,UAAMoE,UAAU,GAAGF,SAAS,EAA5B;AACA,UAAMG,OAAO,GAAGD,UAAU,CAACf,QAAX,CAAoB,IAApB,CAAhB;AAEA,UAAM/E,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA7B;AACA,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAA3B;;AAEA,UAAM+F,SAAS,GAAG,MAAOjF,MAAM,CAACd,OAAD,CAAN,CAAgBgE,QAAhB,CAAyBlD,MAAM,CAACf,SAAD,CAA/B,MAAgD,IAAzE;;AACA,UAAMiG,SAAS,GAAID,SAAS,EAA5B;;AAEA,UAAOvC,KAAK,GAAG,MAAM;AAAC;AAAyC,KAA/D;;AAGA,UAAME,QAAQ,GAAG,KAAK9D,KAAL,CAAW8D,QAA5B;AAEF,wBACI;AAAM,MAAA,SAAS,EAAE,SAAjB;AAA2B,MAAA,QAAQ,EAAEoC,OAAO,GAAGE,SAAS,KAAK,IAAxB,GAA8BxC,KAA9B,GAAsCtC,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,SAAS,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuB;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,UAAiE,KAAKtB,KAAL,CAAWqG,IAA5E,uBAAuF,oBAAC,QAAD;AACvF,MAAA,QAAQ,EAAI,KAAKrG,KAAL,CAAWO,QADgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvF,CADD,eAKI;AAAK,MAAA,SAAS,EAAE,gBAAhB;AACA,MAAA,WAAW,EAAIuD,QADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAO,MAAA,OAAO,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAAG,MAAA,SAAS,EAAE,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,eAAyE;AAAM,MAAA,SAAS,EAAE,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAzE,eACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AACA,MAAA,SAAS,EAAE,IADX;AAEA,MAAA,SAAS,EAAC,6BAFV;AAEwC,MAAA,EAAE,EAAE,eAF5C;AAE6D,MAAA,YAAY,EAAI7D,YAAY,CAACO,MAAb,KAAwB,CAAxB,GAA4Bb,KAAK,CAAC,CAAD,CAAL,CAASU,IAArC,GAA4CJ,YAAY,CAAC,CAAD,CAAZ,CAAgBI,IAFzI;AAE+I,MAAA,QAAQ,MAFvJ;AAE2K,MAAA,QAAQ,EAAEkB,CAAC,IAAI8C,cAAc,CAAC9C,CAAC,CAACG,MAAF,CAASE,KAAV,CAFxM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAIM;AAAM,MAAA,SAAS,EAAE,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC+D,gBAAgB,EAApD,CAJN,CAFJ,CALJ,eAeI;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAO,MAAA,OAAO,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAAG,MAAA,SAAS,EAAE,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,eAA8E;AAAM,MAAA,SAAS,EAAE,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA9E,eACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,eAAxB;AAAwC,MAAA,SAAS,EAAE,6BAAnD;AACA,MAAA,YAAY,EAAI1F,YAAY,CAACO,MAAb,KAAwB,CAAxB,GAA4Bb,KAAK,CAAC,CAAD,CAAL,CAAS6C,cAArC,GAAsDvC,YAAY,CAAC,CAAD,CAAZ,CAAgBuC,cAAhB,CAA+B6C,QAA/B,GAA0CC,OAA1C,CAAkD,GAAlD,EAAuD,EAAvD,EAA2DA,OAA3D,CAAmE,GAAnE,EAAuE,EAAvE,EAA2EA,OAA3E,CAAmF,IAAnF,EAAwF,EAAxF,EAA4FA,OAA5F,CAAoG,EAApG,EAAuG,EAAvG,EAA2GA,OAA3G,CAAmH,MAAnH,EAA0H,EAA1H,EAA8HA,OAA9H,CAAsI,IAAtI,EAA6I,GAA7I,EAAkJC,IAAlJ,GAAyJxD,KAAzJ,CAA+J,GAA/J,CADtE;AAEA,MAAA,EAAE,EAAE,eAFJ;AAGA,MAAA,QAAQ,EAAER,CAAC,IAAI+C,eAAe,CAAC/C,CAAC,CAACG,MAAF,CAASE,KAAV,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAME;AAAM,MAAA,SAAS,EAAE,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC6C,UAAU,EAA9C,CANF,CADL,CAfJ,eAyBI;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAO,MAAA,OAAO,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAAG,MAAA,SAAS,EAAE,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,eAA6E;AAAM,MAAA,SAAS,EAAE,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwC;AAAG,MAAA,IAAI,EAAE,yBAAT;AAAmC,MAAA,MAAM,EAAE,QAA3C;AAAoD,MAAA,GAAG,EAAC,qBAAxD;AAA8E,MAAA,SAAS,EAAE,kBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxC,CAA7E,eACA;AAAO,MAAA,IAAI,EAAC,KAAZ;AAAkB,MAAA,IAAI,EAAC,SAAvB;AAAiC,MAAA,SAAS,EAAE,6BAA5C;AAA4E,MAAA,YAAY,EAAIxE,YAAY,CAAC,CAAD,CAAZ,CAAgBwB,MAA5G;AAAoH,MAAA,EAAE,EAAE,UAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADL,CAzBJ,eA6BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BV,eA+BI;AAAK,MAAA,SAAS,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZ;AAAO,MAAA,OAAO,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6B;AAAM,MAAA,SAAS,EAAE,kCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9D,wBAAkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOxB,YAAY,CAAC,CAAD,CAAZ,CAAgBwC,UAAhB,CAA2BjC,MAA3B,GAAoC,CAApC,GAAyC,UAAzC,GAAsDgF,gBAA7D,CAAlF,CAA7B,eACY;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,WAAxB;AACA,MAAA,EAAE,EAAE,YADJ;AAEA,MAAA,QAAQ,EAAEjE,CAAC,IAAI0C,eAAe,CAAC1C,CAAC,CAACG,MAAF,CAASE,KAAV,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,MADY,oBAMY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANZ,CADJ,eAUA;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAAM,MAAA,SAAS,EAAE,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3D,wBAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO3B,YAAY,CAAC,CAAD,CAAZ,CAAgBwC,UAAhB,CAA2BjC,MAA3B,GAAoC,CAApC,GAAyC,UAAzC,GAAsDiF,cAA7D,CAA/E,CAA3B,eACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,EAAE,EAAE,UAAtC;AACA,MAAA,QAAQ,EAAElE,CAAC,IAAI2C,aAAa,CAAC3C,CAAC,CAACG,MAAF,CAASE,KAAV,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAGE;AAAM,MAAA,SAAS,EAAE,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCuC,YAAY,EAAhD,CAHF,CADJ,CAVA,CA/BJ,CADJ;AAoDC;;AAzQgC;;AAA/BrE,Y,CAEGwG,Y,GAAe;AACpBV,EAAAA,KAAK,EAAE,EADa;AAEpB3F,EAAAA,YAAY,EAAEN,KAAK,CAAC,CAAD,CAFC;AAGpBU,EAAAA,IAAI,EAAEV,KAAK,CAAC,CAAD,CAAL,CAASU;AAHK,C;AA6QxB,eAAeZ,UAAU,CAACK,YAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport '../Font/Font.css';\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { withRouter } from \"react-router-dom\";\nimport config from \"../config\";\nimport { TRIPS } from \"../Defaults\";\nimport { Auth } from 'aws-amplify';\nimport Moment from 'react-moment';\n\n\n\n\n\nclass EditTripForm extends Component {\n\n  static defaultProps = {\n    trips: [],\n    selectedTrip: TRIPS[0],\n    name: TRIPS[0].name,\n  };\n\n    constructor(props) {\n    \n        super(props);\n        const selectedTrip = this.props.selectedTrip\n        this.state = {\n          startDate: null,\n          endDate:  null,\n          name: TRIPS[0].name,\n          id: \"\",\n          username: \"\",\n          selectedTrip: selectedTrip.length === 0? TRIPS[0] : selectedTrip\n          \n        }\n      }\n      \n      componentDidMount () { Auth.currentAuthenticatedUser().then(user => {\n        let id = user.attributes.sub\n        let username = user.username\n    \n        this.props.getUser(id, username)\n\n\n        this.setState ({\n          id,\n          username\n        })\n       \n       \n      });\n    \n        }\n\n  render() {\n\n   \n    const moment= require('moment') \n  \n    const  re = /:\\s|\\s/;\n\n    const userid = this.state.id\n    \n    const onSubmitForm = (e) => {\n\n      e.preventDefault();\n\n      let iframe =e.target.tripURL.value\n      let tripName = e.target.tripName.value\n      let tripTravelers = e.target.tripTravelers.value.split(re)\n      \n\n      const  getDates = () => {\n        var dateArray = [];\n        var currentDate = moment(e.target.startDate.value)\n        var endDate = moment(e.target.endDate.value)\n        \n\n        while (currentDate <= endDate) {\n            dateArray.push(moment(currentDate).format())\n            currentDate = moment(currentDate).add(1, 'd');\n        }\n        return dateArray;\n   } \n   \n        let tripDates = [getDates()]\n\n        const inputValues = {\n            name: tripName,\n            iframe: iframe,\n            traveler_names: tripTravelers,\n            trip_dates: tripDates[0],\n            userid: userid\n          }\n\n        const API = config.API_UY_ENDPOINT   \n        const endpoint = config.endpointT\n\n        const url = API + endpoint +`${this.state.selectedTrip[0].id}`;\n        console.log(url)\n        const API_TOKEN = config.API_UY_KEY\n\n        fetch(url, {\n          \n            method: this.props.method,\n            body: JSON.stringify(inputValues),\n            headers: {\n              'content-type': 'application/json',\n              'authorization': `bearer ${API_TOKEN}`\n            }\n          }\n          )\n\n        .then(res => {\n        if (!res.ok) {\n            // get the error message from the response\n            return res.json().then(error => {\n            // then throw it\n            throw error\n            })\n        }\n\n        \n        this.props.handleAddTrip(iframe, tripName, tripTravelers, tripDates, userid)\n\n        this.props.getTrips(e)\n      \n        \n        })\n\n        this.props.routerProps.history.push(\"/my-trips\")\n\n      \n    }\n    \n    const createStartDate = (startDate) =>{\n        this.setState({\n            startDate: startDate,\n        });\n      }\n\n\n    const createEndDate = (endDate) =>{\n    this.setState({\n        endDate: endDate,\n    });\n    }\n\n\n    const validateDate = () => {\n        const startDate = this.state.startDate\n        const endDate = this.state.endDate\n        if (moment(endDate).isBefore(moment(startDate)) === true)\n        return (\" hmmm...end date should be later than current date\")\n           \n      }\n\n    const createTripName = (name) =>{\n      this.setState({\n          name: name,\n      });\n      }\n\n    const createTravNames = (names) =>{\n      this.setState({\n          traveler_names: names,\n      });\n      }\n\n    const travNames = this.state.traveler_names\n\n    \n    const checkDupes = () => {\n  \n      if (travNames) {\n        const arr = travNames.split(re)\n        let duplicate = arr.reduce((acc,currentValue,index, array) => {\n          if(array.indexOf(currentValue)!==index && !acc.includes(currentValue)) acc.push(currentValue);\n          return acc;\n        }, []);\n\n       \n        if (duplicate.length>0) {return ('please pick a unique name for the one and only ' + duplicate.join(','))}\n    \n    } \n    \n      else return (\"\")\n    }\n      \n    const tripName = this.state.name\n\n  const selectedTrip = this.state.selectedTrip\n  console.log(\"selectedTrip\", selectedTrip)\n  console.log(\"selectedTripdatelenght\", selectedTrip[0].trip_dates.length)\n\n  const datesArray = selectedTrip[0].trip_dates.toString().replace('{', \"\").replace(\"}\",\"\").replace(/\"/g,\"\").replace(\"\",\"\").replace(/\\s+/g,\"\").trim().split(',')\n\n  console.log(datesArray[0])\n\n  const currentStartDate = <Moment format= \"MM/DD/YY\">{datesArray[0]}</Moment>\n  const currentEndDate = <Moment format= \"MM/DD/YY\">{datesArray.pop()}</Moment>\n\n\n    \n    \n    const validateTripName = () => {\n        if (this.props.trips.find((trip) => trip.name === tripName)){\n        return (` ${tripName} already exists, please create a different name`)}\n        else return (\"\")\n           \n      }\n\n      const nameCheck = () => ((this.props.trips.map((trip) => trip.name === tripName)))\n      const checkArray = nameCheck()\n      const dupName = checkArray.includes(true)\n  \n      const startDate = this.state.startDate\n      const endDate = this.state.endDate\n\n      const dateCheck = () => (moment(endDate).isBefore(moment(startDate)) === true)\n      const backDates = (dateCheck())\n\n      const  error = () => {\"duplicate trip name or backwards dates\"}\n\n      \n      const getTrips = this.props.getTrips\n\n    return (\n        <form className= \"myPlans\" onSubmit={dupName | backDates === true? error : onSubmitForm}>\n         <h2 className= \"white\"><i className=\"fas fa-seedling\"></i>&nbsp;{this.props.text}&nbsp;<GoButton\n         username = {this.props.username}\n         /></h2> \n   \n            <div className= \"labelWidthPlan\"\n            onMouseOver = {getTrips}>\n                <label htmlFor= \"new-trip-name\"><i className =\"fas fa-feather white\"></i><span className= \"labelWidthPlan white montebello\">New trip name</span>\n                    <input type=\"text\" name=\"tripName\" \n                    maxLength= \"18\"\n                    className=\"skinBackground black search\" id= \"new-trip-name\"  defaultValue = {selectedTrip.length === 0 ? TRIPS[0].name : selectedTrip[0].name} required                    onChange={e => createTripName(e.target.value)}\n                    /><span className= \"error cloudBlue\">{validateTripName()}</span>\n                </label>\n            </div>\n\n            <div className= \"labelWidthPlan\">\n                 <label htmlFor= \"traveler-name\"><i className =\"fas fa-user-friends white\"></i><span className= \"labelWidthPlan white montebello\">Traveler names</span>\n                 <input type=\"text\" name=\"tripTravelers\" className= \"skinBackground purple names\" \n                 defaultValue = {selectedTrip.length === 0 ? TRIPS[0].traveler_names : selectedTrip[0].traveler_names.toString().replace('{', \"\").replace(\"}\",\"\").replace(/\"/g,\"\").replace(\"\",\"\").replace(/\\s+/g,\"\").replace(/,/g , \" \").trim().split(',')}\n                 id= \"traveler-name\"\n                 onChange={e => createTravNames(e.target.value)}\n                 \n                 /><span className= \"error cloudBlue\">{checkDupes()}</span>\n                </label>\n            </div>\n            <div className= \"labelWidthPlan\">\n                 <label htmlFor= \"map-link\"><i className =\"fas fa-drafting-compass white\"></i><span className= \"labelWidthPlan white\"><a href= \"https://www.google.com/\" target= \"_blank\" rel=\"noopener noreferrer\" className= \"white montebello\">Website</a></span>\n                 <input type=\"url\" name=\"tripURL\" className= \"skinBackground purple names\"   defaultValue = {selectedTrip[0].iframe} id= \"map-link\"/>  \n                </label>\n            </div><br></br>\n\n            <div className= \"dates\">\n                <div className= \"labelWidthDates\">\n    <label htmlFor= \"start-date\"><span className= \"white montebello labelWidthPlan \">Start date<span></span>:&nbsp;<span>{selectedTrip[0].trip_dates.length < 3  ? \"none set\" : currentStartDate}</span></span> \n                <input type=\"date\" name=\"startDate\" \n                id= \"start-date\"\n                onChange={e => createStartDate(e.target.value)}\n                \n                /> </label> <br></br>\n\n            </div>\n            <div className= \"labelWidthDates\">\n                <label htmlFor= \"end-date\"><span className= \"white montebello labelWidthPlan\">End date<span></span>:&nbsp;<span>{selectedTrip[0].trip_dates.length < 3  ? \"none set\" : currentEndDate}</span></span> \n                <input type=\"date\" name=\"endDate\" id= \"end-date\"\n                onChange={e => createEndDate(e.target.value)}\n                /><span className= \"error cloudBlue\">{validateDate()}</span></label>\n            </div>\n           </div>\n       \n        </form>\n        \n   )}\n  \n}\n\n\n\nexport default withRouter(EditTripForm)"]},"metadata":{},"sourceType":"module"}