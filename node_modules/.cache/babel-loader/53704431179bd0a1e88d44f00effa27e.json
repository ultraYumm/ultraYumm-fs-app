{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar querystring_parser_1 = require(\"@aws-sdk/querystring-parser\");\n\nvar url_1 = require(\"url\");\n\nexports.parseUrl = function (url) {\n  var _url_1$parse = url_1.parse(url),\n      _url_1$parse$hostname = _url_1$parse.hostname,\n      hostname = _url_1$parse$hostname === void 0 ? \"localhost\" : _url_1$parse$hostname,\n      _url_1$parse$pathname = _url_1$parse.pathname,\n      pathname = _url_1$parse$pathname === void 0 ? \"/\" : _url_1$parse$pathname,\n      port = _url_1$parse.port,\n      _url_1$parse$protocol = _url_1$parse.protocol,\n      protocol = _url_1$parse$protocol === void 0 ? \"https:\" : _url_1$parse$protocol,\n      search = _url_1$parse.search;\n\n  var query;\n\n  if (search) {\n    query = querystring_parser_1.parseQueryString(search);\n  }\n\n  return {\n    hostname: hostname,\n    port: port ? parseInt(port) : undefined,\n    protocol: protocol,\n    path: pathname,\n    query: query\n  };\n};","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,oBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AAEA,IAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AAEa,OAAA,CAAA,QAAA,GAAsB,UAAC,GAAD,EAA0B;AAAA,qBAOvD,KAAA,CAAA,KAAA,CAAM,GAAN,CAPuD;AAAA,2CAEzD,QAFyD;AAAA,MAEzD,QAFyD,sCAE9C,WAF8C;AAAA,2CAGzD,QAHyD;AAAA,MAGzD,QAHyD,sCAG9C,GAH8C;AAAA,MAIzD,IAJyD,gBAIzD,IAJyD;AAAA,2CAKzD,QALyD;AAAA,MAKzD,QALyD,sCAK9C,QAL8C;AAAA,MAMzD,MANyD,gBAMzD,MANyD;;AAS3D,MAAI,KAAJ;;AACA,MAAI,MAAJ,EAAY;AACV,IAAA,KAAK,GAAG,oBAAA,CAAA,gBAAA,CAAiB,MAAjB,CAAR;AACD;;AAED,SAAO;AACL,IAAA,QAAQ,EAAR,QADK;AAEL,IAAA,IAAI,EAAE,IAAI,GAAG,QAAQ,CAAC,IAAD,CAAX,GAAoB,SAFzB;AAGL,IAAA,QAAQ,EAAR,QAHK;AAIL,IAAA,IAAI,EAAE,QAJD;AAKL,IAAA,KAAK,EAAL;AALK,GAAP;AAOD,CArBY","sourcesContent":["import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nimport { Endpoint, QueryParameterBag, UrlParser } from \"@aws-sdk/types\";\nimport { parse } from \"url\";\n\nexport const parseUrl: UrlParser = (url: string): Endpoint => {\n  const {\n    hostname = \"localhost\",\n    pathname = \"/\",\n    port,\n    protocol = \"https:\",\n    search\n  } = parse(url);\n\n  let query: QueryParameterBag | undefined;\n  if (search) {\n    query = parseQueryString(search);\n  }\n\n  return {\n    hostname,\n    port: port ? parseInt(port) : undefined,\n    protocol,\n    path: pathname,\n    query\n  };\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}