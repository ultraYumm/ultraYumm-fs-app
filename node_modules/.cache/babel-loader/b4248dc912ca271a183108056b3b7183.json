{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/CustomItem/NewItemName.js\";\nimport React, { Component } from \"react\";\nimport \"../Font/Font.css\";\nimport \"../FormElements/FormElements.css\";\nimport { renderToString } from 'react-dom/server';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass NewItemName extends Component {\n  render() {\n    const name = this.props.name;\n    const existingId = this.props.id;\n\n    const buildHandleKeyUp = setter => e => {\n      const id = () => {\n        if (name === input) {\n          return existingId;\n        }\n\n        if (existingId === \"\") {\n          var newId = uuidv4();\n          return newId;\n        }\n\n        return existingId;\n      };\n\n      e.preventDefault();\n      const input = e.currentTarget.value;\n      setter(input, id());\n      this.props.handleAdjustName(input, id());\n    };\n\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"custom-item-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidth white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Item name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"itemName\",\n      className: \"redBackground white search\",\n      id: \"custom-item-name\",\n      defaultValue: name,\n      required: true,\n      onClick: buildHandleKeyUp(value => {\n        this.setState({\n          food_name: value\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nNewItemName.defaultProps = {\n  name: \"Pink salt\",\n  id: \"\"\n};\nexport default NewItemName;","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/CustomItem/NewItemName.js"],"names":["React","Component","renderToString","v4","uuidv4","NewItemName","render","name","props","existingId","id","buildHandleKeyUp","setter","e","input","newId","preventDefault","currentTarget","value","handleAdjustName","setState","food_name","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAO,kCAAP;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAalCK,EAAAA,MAAM,GAAG;AAIP,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AACA,UAAME,UAAU,GAAG,KAAKD,KAAL,CAAWE,EAA9B;;AAMA,UAAMC,gBAAgB,GAAGC,MAAM,IAAKC,CAAD,IAAO;AAG1C,YAAMH,EAAE,GAAI,MAAM;AAChB,YAAIH,IAAI,KAAKO,KAAb,EACA;AAAC,iBAAOL,UAAP;AAAkB;;AACnB,YAAIA,UAAU,KAAK,EAAnB,EACA;AAAC,cAAIM,KAAK,GAAGX,MAAM,EAAlB;AACD,iBAAOW,KAAP;AAAa;;AACb,eAAON,UAAP;AACC,OAPH;;AAUEI,MAAAA,CAAC,CAACG,cAAF;AACA,YAAMF,KAAK,GAAGD,CAAC,CAACI,aAAF,CAAgBC,KAA9B;AAGCN,MAAAA,MAAM,CAACE,KAAD,EAAQJ,EAAE,EAAV,CAAN;AAED,WAAKF,KAAL,CAAWW,gBAAX,CAA4BL,KAA5B,EAAmCJ,EAAE,EAArC;AACA,KApBF;;AAyBA,wBAEI;AAAO,MAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,SAAS,EAAC,4BAHZ;AAIE,MAAA,EAAE,EAAC,kBAJL;AAKE,MAAA,YAAY,EAAGH,IALjB;AAKuB,MAAA,QAAQ,MAL/B;AAQE,MAAA,OAAO,EAAII,gBAAgB,CAAEO,KAAD,IAAW;AAErC,aAAKE,QAAL,CACE;AAACC,UAAAA,SAAS,EAAEH;AAAZ,SADF;AAKD,OAP0B,CAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFJ;AA0BD;;AA3EiC;;AAA9Bb,W,CAEGiB,Y,GAAe;AACpBf,EAAAA,IAAI,EAAG,WADa;AAEpBG,EAAAA,EAAE,EAAE;AAFgB,C;AA4ExB,eAAeL,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Font/Font.css\";\nimport \"../FormElements/FormElements.css\";\nimport { renderToString } from 'react-dom/server';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass NewItemName extends Component {\n\n  static defaultProps = {\n    name:  \"Pink salt\",\n    id: \"\"\n  }\n\n  \n  \n  \n\n\n\n  render() {\n\n    \n\n    const name = this.props.name;\n    const existingId = this.props.id\n\n    \n\n\n    \n    const buildHandleKeyUp = setter => (e) => {\n\n\n    const id  = () => {\n      if (name === input)\n      {return existingId}\n      if (existingId === \"\")\n      {var newId = uuidv4()\n      return newId} \n      return existingId\n      }\n\n     \n      e.preventDefault() \n      const input = e.currentTarget.value\n\n     \n       setter(input, id())\n      \n      this.props.handleAdjustName(input, id())\n     }\n\n    \n\n\n    return (\n     \n        <label htmlFor=\"custom-item-name\">\n          <span className=\"labelWidth white\">Item name</span>\n          <input\n            type=\"text\"\n            name=\"itemName\"\n            className=\"redBackground white search\"\n            id=\"custom-item-name\"\n            defaultValue= {name} required\n            \n\n            onClick = {buildHandleKeyUp((value) => {\n      \n              this.setState(\n                {food_name: value\n                }\n              )\n\n            })}\n\n\n          />\n        </label>\n   \n    );\n  }\n}\n\nexport default NewItemName;\n"]},"metadata":{},"sourceType":"module"}