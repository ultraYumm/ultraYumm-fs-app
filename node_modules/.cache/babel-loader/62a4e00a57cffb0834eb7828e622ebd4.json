{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/Search/SearchForm.js\";\nimport React, { Component } from 'react';\nimport './Search.css';\nimport '../Font/Font.css';\nimport config from '../config';\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { withRouter } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\n\nclass SearchForm extends Component {\n  render() {\n    const onSubmitForm = e => {\n      e.preventDefault();\n      let searchTerm = e.target.searchTerm.value;\n      console.log(searchTerm);\n      this.props.handleUpdate(searchTerm);\n      console.log(searchTerm);\n      const apId = config.APID;\n      const apiKey = config.API_KEY;\n      const remoteUser = config.REMOTEUSER;\n      const detailed = config.DETAILED;\n      const getURL = config.API_ENDPOINT;\n\n      function formatQueryParams(params) {\n        const queryItems = Object.keys(params).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`);\n        return queryItems.join('&');\n      }\n\n      const displayResults = responseJson => {\n        let searchResults = responseJson;\n        return this.props.handleResults(searchResults);\n        this.props.history.push('/search-results');\n      };\n\n      function getResults(query) {\n        const params = {\n          query: searchTerm,\n          detailed: detailed\n        };\n        const queryString = formatQueryParams(params);\n        const url = getURL + '?' + queryString;\n        const options = {\n          headers: new Headers({\n            'x-app-id': apId,\n            'x-app-key': apiKey,\n            'x-remote-user-id': remoteUser\n          })\n        };\n        fetch(url, options).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(responseJson => displayResults(responseJson)).catch(err => {});\n      }\n\n      console.log(getResults(searchTerm));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }\n    }, \"Quick search!\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"searchTerm\",\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Search by name or brand\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"redBackground white search\",\n      name: \"searchTerm\",\n      type: \"search\",\n      placeholder: \"Granola\",\n      required: true,\n      id: \"searchTerm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(NavLink, {\n      to: `/search-results`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GoButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default withRouter(SearchForm);\n/*</NavLink>\n<NavLink to={`/search-results`}>*/","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/Search/SearchForm.js"],"names":["React","Component","config","GoButton","withRouter","NavLink","SearchForm","render","onSubmitForm","e","preventDefault","searchTerm","target","value","console","log","props","handleUpdate","apId","APID","apiKey","API_KEY","remoteUser","REMOTEUSER","detailed","DETAILED","getURL","API_ENDPOINT","formatQueryParams","params","queryItems","Object","keys","map","key","encodeURIComponent","join","displayResults","responseJson","searchResults","handleResults","history","push","getResults","query","queryString","url","options","headers","Headers","fetch","then","response","ok","json","Error","statusText","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Search.css';\nimport '../Font/Font.css';\nimport config from '../config'\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { withRouter } from 'react-router-dom';\n\nimport { NavLink} from 'react-router-dom'\n\n\n\nclass SearchForm extends Component {\n\n  \n  render() {\n\n        \n    const onSubmitForm = (e) => {\n      e.preventDefault()\n\n    let searchTerm = e.target.searchTerm.value\n\n    console.log(searchTerm)\n\n\n\n    this.props.handleUpdate(searchTerm)\n    \n    console.log(searchTerm)\n    \n    const apId = config.APID\n    \n    const apiKey = config.API_KEY\n    \n    const remoteUser = config.REMOTEUSER\n    \n    const detailed = config.DETAILED\n    \n    const getURL = config.API_ENDPOINT   \n    \n    function formatQueryParams(params) {\n      const queryItems = Object.keys(params)\n        .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n      return queryItems.join('&')\n    }\n    \n     const displayResults = (responseJson) => {\n      let searchResults = responseJson\n      return this.props.handleResults(searchResults)\n      this.props.history.push('/search-results')\n   \n      \n    }\n\n    \n    function getResults(query) {\n      \n      const params = {\n      query: searchTerm,\n      detailed: detailed,\n      }\n    \n      const queryString = formatQueryParams(params)\n      const url = getURL + '?' + queryString\n    \n      const options = {\n        headers: new Headers({\n          'x-app-id': apId,\n          'x-app-key': apiKey,\n          'x-remote-user-id':remoteUser\n          })\n      }\n      \n      fetch(url, options)\n        .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n          throw new Error(response.statusText)\n        })\n        .then(responseJson => displayResults(responseJson))\n        .catch(err => {\n          \n          })\n    }\n    console.log(getResults(searchTerm))\n  }\n\n     \n    return (\n      <div>\n\n       \n        <form onSubmit={onSubmitForm}>\n\n         <h2 className= \"white\">Quick search!</h2>\n            <label htmlFor= \"searchTerm\" className= \"white\">Search by name or brand</label>\n               <input  className= \"redBackground white search\"\n                name='searchTerm'\n                type='search'\n                placeholder='Granola'\n                required\n                id= 'searchTerm'\n\n              />\n            <NavLink to = {`/search-results`}>\n            <GoButton></GoButton>\n            </NavLink>\n            \n       \n        </form>\n   \n\n        </div>\n        \n   )}\n  \n}\n  \n\nexport default withRouter (SearchForm)\n\n/*</NavLink>\n<NavLink to={`/search-results`}>*/"]},"metadata":{},"sourceType":"module"}