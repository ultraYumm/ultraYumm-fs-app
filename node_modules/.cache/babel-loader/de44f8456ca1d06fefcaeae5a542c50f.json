{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/NavHome/SignInBox.js\";\nimport React, { Component } from \"react\";\nimport \"./Home.css\";\nimport \"../FormElements/FormElements.css\";\nimport \"../Font/Font.css\";\nimport uYtitle from \"../Images/uYtitle.png\";\nimport { Auth } from 'aws-amplify';\nimport { withRouter } from \"react-router-dom\";\nimport { AmplifyAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { AuthState, onAuthUIStateChange } from '@aws-amplify/ui-components';\nimport awsconfig from '../aws-exports'; //Auth.currentAuthenticatedUser().then(user => console.log(user));\n//Auth.currentCredentials().then(creds => console.log(creds));\n// Auth.currentSession() does not currently support federated identities. Please store the auth0 session info manually(for example, store tokens into the local storage).\n\nclass SignInBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\"\n    };\n  }\n\n  handleUsers(id) {\n    this.setState({\n      id\n    });\n  }\n\n  componentDidMount() {\n    Auth.currentAuthenticatedUser().then(user => {\n      let id = user.attributes.sub;\n      this.setState({\n        id\n      });\n    });\n  } //localStorage.get(\"variable name\")\n\n\n  render() {\n    console.log(this.state.id);\n\n    const signIn = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AmplifyAuthenticator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(AmplifySignOut, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }));\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"uYtitle\",\n      src: uYtitle,\n      alt: \"ultraYumm logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"black montebello title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Get more energy!\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, \"\\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lighter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"pack lighter\", signIn()))));\n  }\n\n}\n\nexport default withRouter(SignInBox);","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/NavHome/SignInBox.js"],"names":["React","Component","uYtitle","Auth","withRouter","AmplifyAuthenticator","AmplifySignOut","AuthState","onAuthUIStateChange","awsconfig","SignInBox","constructor","props","state","id","handleUsers","setState","componentDidMount","currentAuthenticatedUser","then","user","attributes","sub","render","console","log","signIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAO,kCAAP;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,oBAAT,EAA+BC,cAA/B,QAAqD,uBAArD;AACA,SAASC,SAAT,EAAoBC,mBAApB,QAA+C,4BAA/C;AACA,OAAOC,SAAP,MAAsB,gBAAtB,C,CAGA;AAEA;AACA;;AAIA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAEhCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,EAAE,EAAE;AADQ,KAAb;AAGD;;AAKHC,EAAAA,WAAW,CAACD,EAAD,EAAK;AAEZ,SAAKE,QAAL,CAAe;AACbF,MAAAA;AADa,KAAf;AAID;;AAEDG,EAAAA,iBAAiB,GAAI;AAAEd,IAAAA,IAAI,CAACe,wBAAL,GAAgCC,IAAhC,CAAqCC,IAAI,IAAI;AAClE,UAAIN,EAAE,GAAGM,IAAI,CAACC,UAAL,CAAgBC,GAAzB;AACA,WAAKN,QAAL,CAAe;AACbF,QAAAA;AADa,OAAf;AAEI,KAJiB;AAMpB,GA1B6B,CAgClC;;;AACES,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,EAAvB;;AAKA,UAAMY,MAAM,GAAG,mBAEb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CAFF;;AAWA,wBAGE;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE,SAAhB;AAA0B,MAAA,GAAG,EAAExB,OAA/B;AAAwC,MAAA,GAAG,EAAC,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAI,MAAA,SAAS,EAAE,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADlB,eAEE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuCwB,MAAM,EAA7C,CAFF,CAFF,CADF,CAHF;AAkBD;;AArE+B;;AAuElC,eAAetB,UAAU,CAACM,SAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Home.css\";\nimport \"../FormElements/FormElements.css\";\nimport \"../Font/Font.css\";\nimport uYtitle from \"../Images/uYtitle.png\";\nimport { Auth } from 'aws-amplify';\nimport { withRouter } from \"react-router-dom\";\nimport { AmplifyAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { AuthState, onAuthUIStateChange } from '@aws-amplify/ui-components';\nimport awsconfig from '../aws-exports';\n\n\n//Auth.currentAuthenticatedUser().then(user => console.log(user));\n\n//Auth.currentCredentials().then(creds => console.log(creds));\n// Auth.currentSession() does not currently support federated identities. Please store the auth0 session info manually(for example, store tokens into the local storage).\n\n\n\nclass SignInBox extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n     id: \"\"\n    };\n  }\n\n  \n\n   \nhandleUsers(id) {\n \n    this.setState ({\n      id\n    })\n\n  } \n  \n  componentDidMount () { Auth.currentAuthenticatedUser().then(user => {\n    let id = user.attributes.sub\n    this.setState ({\n      id\n    }) });\n\n    }\n\n\n\n\n\n//localStorage.get(\"variable name\")\n  render() {\n\n    console.log(this.state.id)\n\n    \n\n\n    const signIn = () => (\n\n      <div\n      >\n      <AmplifyAuthenticator/>    \n      <AmplifySignOut />      \n      </div>\n\n    );\n     \n  \n    return (\n\n\n      <div className= \"home\">\n        <div className= \"home\">\n          <img className= \"uYtitle\" src={uYtitle} alt=\"ultraYumm logo\" />\n          <h1 className= \"black montebello title\">\n            Get more energy!<span>&nbsp;&nbsp;</span>\n            <span className=\"lighter\">pack lighter{signIn()}</span>\n          </h1>\n         \n        </div>\n\n\n       \n       \n      </div>\n    );\n  }\n}\nexport default withRouter(SignInBox);"]},"metadata":{},"sourceType":"module"}