{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/AddTrip/AddTripForm.js\";\nimport React, { Component } from 'react';\nimport './AddTrip.css';\nimport '../Font/Font.css';\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { NavLink } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport Moment from 'react-moment';\nimport { withRouter } from \"react-router-dom\";\n\nclass AddTripForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: \"\",\n      endDate: \"\"\n    };\n  }\n\n  render() {\n    const moment = require('moment');\n\n    const onSubmitForm = e => {\n      e.preventDefault();\n      let tripId = uuidv4();\n      let iframe = e.target.tripURL.value;\n      let tripName = e.target.tripName.value;\n      var re = /:\\s|,\\s/;\n      let tripTravelers = e.target.tripTravelers.value.split(re);\n\n      const getDates = () => {\n        var dateArray = [];\n        var currentDate = moment(e.target.startDate.value);\n        var endDate = moment(e.target.endDate.value);\n        this.setState({\n          startDate: currentDate,\n          endDate: endDate\n        });\n\n        while (currentDate <= endDate) {\n          dateArray.push(moment(currentDate).format());\n          currentDate = moment(currentDate).add(1, 'd');\n        }\n\n        return dateArray;\n      };\n\n      let tripDates = getDates();\n      this.props.handleAddTrip(tripId, iframe, tripName, tripTravelers, tripDates); //this.props.routerProps.history.push(\"/my-trips\");\n    };\n\n    const validateDate = () => {\n      const startDate = this.state.startDate;\n      const endDate = this.state.endDate;\n\n      if (endDate < startDate) {\n        return \"endDate must be later than current date\";\n      }\n    };\n\n    const startDate = this.state.startDate._d;\n    console.log(startDate);\n    console.log(validateDate());\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }\n    }, \"Plan a trip!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-trip-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidth white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 49\n      }\n    }, \"New trip name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"tripName\",\n      className: \"redBackground white search\",\n      id: \"new-trip-name\",\n      placeholder: \"Escalante\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"start-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidth white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 46\n      }\n    }, \"Start date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"startDate\",\n      id: \"start-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"end-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidth white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 44\n      }\n    }, \"End date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"endDate\",\n      id: \"end-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, validateDate)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"traveler-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidth white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 50\n      }\n    }, \"Traveler names\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"tripTravelers\",\n      className: \"redBackground white names\",\n      placeholder: \"Stef, Jack, Emi, Marielle...\",\n      id: \"traveler-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"map-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidth white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://www.google.com/maps\",\n      target: \"_blank\",\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 81\n      }\n    }, \"Location URL\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      name: \"tripURL\",\n      className: \"redBackground white names\",\n      defaultValue: \"https://earth.google.com/\",\n      id: \"map-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(GoButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(AddTripForm);","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/AddTrip/AddTripForm.js"],"names":["React","Component","GoButton","NavLink","v4","uuidv4","Moment","withRouter","AddTripForm","constructor","props","state","startDate","endDate","render","moment","require","onSubmitForm","e","preventDefault","tripId","iframe","target","tripURL","value","tripName","re","tripTravelers","split","getDates","dateArray","currentDate","setState","push","format","add","tripDates","handleAddTrip","validateDate","_d","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './AddTrip.css';\nimport '../Font/Font.css';\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { NavLink} from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport Moment from 'react-moment';\nimport { withRouter } from \"react-router-dom\";\n\nclass AddTripForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          startDate: \"\",\n          endDate: \"\"\n        }\n      }\n    \n\n  \n  render() {\n\n    const moment= require('moment') \n    \n    const onSubmitForm = (e) => {\n\n      e.preventDefault();\n      let tripId = uuidv4()\n      let iframe =e.target.tripURL.value\n      let tripName = e.target.tripName.value\n      var re = /:\\s|,\\s/;\n      let tripTravelers = e.target.tripTravelers.value.split(re)\n\n      const  getDates = () => {\n        var dateArray = [];\n        var currentDate = moment(e.target.startDate.value)\n        var endDate = moment(e.target.endDate.value)\n        this.setState ({\n            startDate: currentDate,\n            endDate: endDate\n\n        })\n\n        while (currentDate <= endDate) {\n            dateArray.push(moment(currentDate).format())\n            currentDate = moment(currentDate).add(1, 'd');\n        }\n        return dateArray;\n   }\n\n   \n   \n   let tripDates = getDates()\n\n\n      this.props.handleAddTrip(tripId, iframe, tripName, tripTravelers, tripDates)\n      //this.props.routerProps.history.push(\"/my-trips\");\n      \n      \n    }\n\n    const validateDate = () => {\n        const startDate = this.state.startDate\n        const endDate = this.state.endDate\n        if (endDate < startDate ) {\n          return \"endDate must be later than current date\"\n        }   \n\n      }\n\n      const startDate = this.state.startDate._d\n      console.log(startDate)\n\n\n      console.log(validateDate())\n\n    return (\n        <form onSubmit={onSubmitForm}>\n         <h2 className = \"white\">Plan a trip!</h2>\n            <div>\n                <label htmlFor= \"new-trip-name\"><span className= \"labelWidth white\">New trip name</span>\n                    <input type=\"text\" name=\"tripName\" className=\"redBackground white search\" id= \"new-trip-name\" placeholder=\"Escalante\" required/>\n                </label>\n            </div>\n\n            <div>\n                <label htmlFor= \"start-date\"><span className= \"labelWidth white\">Start date</span>\n                <input type=\"date\" name=\"startDate\" id= \"start-date\"/> </label> <br></br>\n                <label htmlFor= \"end-date\"><span className= \"labelWidth white\">End date</span>\n                <input type=\"date\" name=\"endDate\" id= \"end-date\"/> </label>\n                <div>{validateDate}</div>\n                            \n            </div>\n\n            <div>\n                 <label htmlFor= \"traveler-name\"><span className= \"labelWidth white\">Traveler names</span>\n                 <input type=\"text\" name=\"tripTravelers\" className= \"redBackground white names\" placeholder = \"Stef, Jack, Emi, Marielle...\" id= \"traveler-name\"/>  \n                </label>\n            </div>\n\n            <div>\n                 <label htmlFor= \"map-link\"><span className= \"labelWidth white\"><a href= \"https://www.google.com/maps\" target= \"_blank\"  className= \"white\">Location URL</a></span>\n                 <input type=\"url\" name=\"tripURL\" className= \"redBackground white names\" defaultValue = \"https://earth.google.com/\" id= \"map-link\"/>  \n                </label>\n            </div>\n\n            <GoButton/>\n   \n        </form>\n        \n   )}\n  \n}\n  \n\nexport default withRouter(AddTripForm)"]},"metadata":{},"sourceType":"module"}