{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/AddTrip/AddTripForm.js\";\nimport React, { Component } from 'react';\nimport '../Font/Font.css';\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { withRouter } from \"react-router-dom\";\nimport config from \"../config\";\nimport { TRIPS } from \"../Defaults\";\nimport Moment from 'react-moment';\n\nclass AddTripForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: null,\n      endDate: null\n    };\n  }\n\n  render() {\n    const getTrips = this.props.getTrips;\n\n    const moment = require('moment');\n\n    const onSubmitForm = e => {\n      e.preventDefault();\n      let iframe = e.target.tripURL.value;\n      let tripName = e.target.tripName.value;\n      var re = /:\\s|,\\s/;\n      let tripTravelers = e.target.tripTravelers.value.split(re);\n      let userid = 1;\n\n      const getDates = () => {\n        var dateArray = [];\n        var currentDate = moment(e.target.startDate.value);\n        var endDate = moment(e.target.endDate.value);\n\n        while (currentDate <= endDate) {\n          dateArray.push(moment(currentDate).format());\n          currentDate = moment(currentDate).add(1, 'd');\n        }\n\n        return dateArray;\n      };\n\n      let tripDates = [getDates()];\n      const inputValues = {\n        name: tripName,\n        iframe: iframe,\n        traveler_names: tripTravelers,\n        trip_dates: tripDates[0],\n        userid: userid\n      };\n      console.log(inputValues);\n      const API = config.API_UY_ENDPOINT;\n      const endpoint = config.endpointT;\n      const url = API + endpoint;\n      const API_TOKEN = config.API_UY_KEY;\n      const startDate = this.state.startDate;\n      const endDate = this.state.endDate;\n\n      if (moment(endDate).isBefore(moment(startDate)) === true) {\n        this.props.routerProps.history.push(\"/\");\n      } else fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(inputValues),\n        headers: {\n          'content-type': 'application/json',\n          'authorization': `bearer ${API_TOKEN}`\n        }\n      }).then(res => {\n        if (!res.ok) {\n          // get the error message from the response\n          return res.json().then(error => {\n            // then throw it\n            throw error;\n          });\n        }\n\n        return res.json();\n      });\n\n      this.props.handleAddTrip(iframe, tripName, tripTravelers, tripDates, userid);\n      this.props.routerProps.history.push(\"/my-trips\");\n    };\n\n    const createStartDate = startDate => {\n      this.setState({\n        startDate: startDate\n      });\n    };\n\n    const createEndDate = endDate => {\n      this.setState({\n        endDate: endDate\n      });\n    };\n\n    const validateDate = () => {\n      const startDate = this.state.startDate;\n      const endDate = this.state.endDate;\n      if (moment(endDate).isBefore(moment(startDate)) === true) return \"hmmm...end date should be later than current date\";\n    };\n\n    const todaysDate = moment();\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-shoe-prints\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }), \" Plan a trip! \", /*#__PURE__*/React.createElement(GoButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 86\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-trip-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-feather white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 90\n      }\n    }, \"New trip name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"tripName\",\n      className: \"skinBackground black search\",\n      id: \"new-trip-name\",\n      placeholder: \"Escalante\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"traveler-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-user-friends white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 96\n      }\n    }, \"Traveler names\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"tripTravelers\",\n      className: \"skinBackground purple names\",\n      defaultValue: TRIPS[0].traveler_names,\n      placeholder: \"Stef, Jack, Emi, Marielle...\",\n      id: \"traveler-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"map-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-drafting-compass white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidthPlan white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 95\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://www.google.com/maps\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"white montebello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 135\n      }\n    }, \"Location URL\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      name: \"tripURL\",\n      className: \"skinBackground purple names\",\n      defaultValue: TRIPS[0].iframe,\n      id: \"map-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthDates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"start-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"white montebello labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 46\n      }\n    }, \"Start date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"startDate\",\n      defaultValue: todaysDate,\n      id: \"start-date\",\n      onChange: e => createStartDate(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelWidthDates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"end-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"white montebello labelWidthPlan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 44\n      }\n    }, \"End date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"endDate\",\n      id: \"end-date\",\n      defaultValue: todaysDate,\n      onChange: e => createEndDate(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error cloudBlue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, validateDate())))));\n  }\n\n}\n\nexport default withRouter(AddTripForm);","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/AddTrip/AddTripForm.js"],"names":["React","Component","GoButton","withRouter","config","TRIPS","Moment","AddTripForm","constructor","props","state","startDate","endDate","render","getTrips","moment","require","onSubmitForm","e","preventDefault","iframe","target","tripURL","value","tripName","re","tripTravelers","split","userid","getDates","dateArray","currentDate","push","format","add","tripDates","inputValues","name","traveler_names","trip_dates","console","log","API","API_UY_ENDPOINT","endpoint","endpointT","url","API_TOKEN","API_UY_KEY","isBefore","routerProps","history","fetch","method","body","JSON","stringify","headers","then","res","ok","json","error","handleAddTrip","createStartDate","setState","createEndDate","validateDate","todaysDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../Font/Font.css';\nimport GoButton from '../FormElements/GoButton';\nimport '../FormElements/FormElements.css';\nimport { withRouter } from \"react-router-dom\";\nimport config from \"../config\";\nimport { TRIPS } from \"../Defaults\";\nimport Moment from 'react-moment';\n\n\nclass AddTripForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          startDate: null,\n          endDate: null\n        }\n      }\n      \n      \n\n  render() {\n\n    const getTrips = this.props.getTrips\n\n    const moment= require('moment') \n    \n    const onSubmitForm = (e) => {\n\n      e.preventDefault();\n\n      let iframe =e.target.tripURL.value\n      let tripName = e.target.tripName.value\n      var re = /:\\s|,\\s/;\n      let tripTravelers = e.target.tripTravelers.value.split(re)\n      let userid = 1\n\n      const  getDates = () => {\n        var dateArray = [];\n        var currentDate = moment(e.target.startDate.value)\n        var endDate = moment(e.target.endDate.value)\n        \n\n        while (currentDate <= endDate) {\n            dateArray.push(moment(currentDate).format())\n            currentDate = moment(currentDate).add(1, 'd');\n        }\n        return dateArray;\n   } \n   \n        let tripDates = [getDates()]\n\n        const inputValues = {\n            name: tripName,\n            iframe: iframe,\n            traveler_names: tripTravelers,\n            trip_dates: tripDates[0],\n            userid: userid\n          }\n\n          console.log(inputValues)\n\n        \n\n        const API = config.API_UY_ENDPOINT   \n        const endpoint = config.endpointT\n\n        const url = API + endpoint;\n        const API_TOKEN = config.API_UY_KEY\n\n\n        const startDate = this.state.startDate\n        const endDate = this.state.endDate\n\n        if (moment(endDate).isBefore(moment(startDate)) === true)\n        {this.props.routerProps.history.push(\"/\")}\n        else \n        fetch(url, {\n          \n            method: 'POST',\n            body: JSON.stringify(inputValues),\n            headers: {\n              'content-type': 'application/json',\n              'authorization': `bearer ${API_TOKEN}`\n            }\n           \n            \n          }\n          )\n\n\n        .then(res => {\n        if (!res.ok) {\n            // get the error message from the response\n            return res.json().then(error => {\n            // then throw it\n            throw error\n            })\n        }\n      \n       \n        return res.json()\n      \n        \n        })\n        \n        this.props.handleAddTrip(iframe, tripName, tripTravelers, tripDates, userid)\n\n      \n    \n        this.props.routerProps.history.push(\"/my-trips\")\n      \n    }\n    \n    const createStartDate = (startDate) =>{\n        this.setState({\n            startDate: startDate,\n        });\n      }\n\n\n    const createEndDate = (endDate) =>{\n    this.setState({\n        endDate: endDate,\n    });\n    }\n\n\n    const validateDate = () => {\n        \n        const startDate = this.state.startDate\n        \n        const endDate = this.state.endDate\n      \n       \n        if (moment(endDate).isBefore(moment(startDate)) === true)\n        return (\"hmmm...end date should be later than current date\")\n           \n      }\n\n      const todaysDate = moment ()\n    \n\n    return (\n        <form onSubmit={onSubmitForm}>\n         <h2 className= \"white\"><i className =\"fas fa-shoe-prints\"></i> Plan a trip! <GoButton\n         /></h2> \n   \n            <div className= \"labelWidthPlan\">\n                <label htmlFor= \"new-trip-name\"><i className =\"fas fa-feather white\"></i><span className= \"labelWidthPlan white montebello\">New trip name</span>\n                    <input type=\"text\" name=\"tripName\" className=\"skinBackground black search\" id= \"new-trip-name\" placeholder=\"Escalante\" required/>\n                </label>\n            </div>\n\n            <div className= \"labelWidthPlan\">\n                 <label htmlFor= \"traveler-name\"><i className =\"fas fa-user-friends white\"></i><span className= \"labelWidthPlan white montebello\">Traveler names</span>\n                 <input type=\"text\" name=\"tripTravelers\" className= \"skinBackground purple names\" \n                 defaultValue = {TRIPS[0].traveler_names}\n                 placeholder = \"Stef, Jack, Emi, Marielle...\" id= \"traveler-name\"/>  \n                </label>\n            </div>\n            <div className= \"labelWidthPlan\">\n                 <label htmlFor= \"map-link\"><i className =\"fas fa-drafting-compass white\"></i><span className= \"labelWidthPlan white\"><a href= \"https://www.google.com/maps\" target= \"_blank\" rel=\"noopener noreferrer\" className= \"white montebello\">Location URL</a></span>\n                 <input type=\"url\" name=\"tripURL\" className= \"skinBackground purple names\"   defaultValue = {TRIPS[0].iframe} id= \"map-link\"/>  \n                </label>\n            </div><br></br>\n\n            <div className= \"dates\">\n                <div className= \"labelWidthDates\">\n                <label htmlFor= \"start-date\"><span className= \"white montebello labelWidthPlan\">Start date</span>\n                <input type=\"date\" name=\"startDate\" \n                defaultValue = {todaysDate}\n                id= \"start-date\"\n                onChange={e => createStartDate(e.target.value)}\n                \n                /> </label> <br></br>\n\n            </div>\n            <div className= \"labelWidthDates\">\n                <label htmlFor= \"end-date\"><span className= \"white montebello labelWidthPlan\">End date</span>\n                <input type=\"date\" name=\"endDate\" id= \"end-date\"\n                defaultValue = {todaysDate}\n                onChange={e => createEndDate(e.target.value)}\n                /><span className= \"error cloudBlue\">{validateDate()}</span></label>\n            </div>\n           </div>\n       \n        </form>\n        \n   )}\n  \n}\n\n\n\nexport default withRouter(AddTripForm)"]},"metadata":{},"sourceType":"module"}