{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/ItemDetails/ItemAdjust.js\";\nimport \"../Font/Font.css\";\nimport \"../FormElements/FormElements.css\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../FormElements/BackButton\";\nimport SaveButton from \"../FormElements/SaveButton\";\nimport ResetButton from \"../FormElements/ResetButton\";\nimport Quant from \"../CustomItem/Quant\";\nimport TripNames from \"../CustomItem/TripNames\";\nimport \"../Tables/Tables.css\";\nimport { NavLink } from \"react-router-dom\";\nimport TripDates from \"../TripDetails/TripDates\";\nimport ItemTypes from \"../CustomItem/ItemTypes\";\nimport TripTravelers from \"../TripDetails/TripTravelers\";\nimport NewItemName from \"../CustomItem//NewItemName\";\nimport NewItemBrand from \"../CustomItem/NewItemBrand\";\nimport ItemImage from \"../ItemDetails/ItemImage\";\nimport ServingQuant from \"../ItemDetails/ServingQuant\";\nimport ServingUnit from \"../ItemDetails/ServingUnit\";\nimport ServingWeight from \"../ItemDetails/ServingWeight\";\nimport CalsPerServing from \"../ItemDetails/CalsPerServing\";\nimport { DEFAULTITEM } from \"../Defaults\";\n\nclass ItemAdjust extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectTrip = selectedTrip => {\n      const tripName = selectedTrip.name;\n      const tripDates = selectedTrip.trip_dates;\n      const tripTravelers = selectedTrip.traveler_names;\n      this.setState({\n        selectedTrip: selectedTrip,\n        tripName: tripName,\n        tripDates: tripDates,\n        tripTravelers: tripTravelers\n      });\n    };\n\n    this.adjustQuant = (input, id) => {\n      this.setState({\n        quantInput: input,\n        id: id\n      });\n    };\n\n    this.state = {\n      tripName: \"\",\n      selectedTripId: \"\",\n      selectedTrip: {},\n      tripDates: [],\n      quantInput: null,\n      id: \"\",\n      serving_qty: null\n    };\n  }\n\n  render() {\n    const trips = this.props.trips;\n    const itemTypes = this.props.itemTypes;\n\n    const onSubmitForm = e => {};\n\n    const item = this.props.selectedItem;\n    console.log(item);\n    const image = item.image;\n    const name = item.food_name;\n    const brand = !item.brand_name ? \"common\" : item.brand_name;\n    const quant = Math.round(item.serving_qty);\n    const unit = item.serving_unit;\n    const weight = Math.round(item.serving_weight_grams);\n    const calsPs = Math.round(item.calsPerServing);\n    const totalWeight = quant * weight;\n    const totalCalnf = quant * calsPs;\n    const totalCal = totalCalnf.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"filterForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BackButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"adjustImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ItemImage, {\n      image: image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"filter\",\n      onSubmit: onSubmitForm,\n      className: \"whiteBackground\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"montebello black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Customize your item!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filterButtonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `/search-results`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SaveButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ResetButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NewItemName, {\n      name: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NewItemBrand, {\n      brand: brand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calcBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"custom-item-quantity\",\n      className: \"labelWidth black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, \"Serving Quantity\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dataInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ServingQuant, {\n      quant: quant,\n      id: item.id,\n      handleAdjustQuant: (inputValue, id) => this.adjustQuant(inputValue, id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"custom-item-unit\",\n      className: \"labelWidth black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, \"Serving unit\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"textInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ServingUnit, {\n      unit: unit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"custom-item-weight\",\n      className: \"labelWidth black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, \"Weight per serving\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dataInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ServingWeight, {\n      weight: weight,\n      result: Math.round(this.state.quantInput * item.serving_weight_grams),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"custom-item-calories\",\n      className: \"labelWidth black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, \"Calories per serving\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dataInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CalsPerServing, {\n      calories: calsPs,\n      result: Math.round(this.state.quantInput * item.calsPerServing),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resultsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resultBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"custom-item-total-weight\",\n      className: \"labelWidth black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, \"Total Weight\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dataResult blackBackground white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, totalWeight)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resultBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"custom-item-total-cal\",\n      className: \"labelWidth black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, \"Total Calories\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dataResult blackBackground white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 19\n      }\n    }, totalCal))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filterContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"filterCategory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }\n    }, \"Trip\"), /*#__PURE__*/React.createElement(TripNames, {\n      trips: trips,\n      handleSelectTrip: selectedTrip => this.selectTrip(selectedTrip),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"filterCategory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, \"Dates\"), /*#__PURE__*/React.createElement(TripDates, {\n      tripDates: this.state.tripDates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"filterCategory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(ItemTypes, {\n      itemTypes: itemTypes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"filterCategory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, \"Traveler\"), /*#__PURE__*/React.createElement(TripTravelers, {\n      tripTravelers: this.state.tripTravelers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nItemAdjust.defaultProps = {\n  item: {\n    DEFAULTITEM\n  },\n  selectedTrip: [],\n  quant: \"\",\n  id: \"\",\n  unit: \"\",\n  weight: 1,\n  calsPs: null,\n  serving_qty: null\n};\nexport default ItemAdjust;","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/ItemDetails/ItemAdjust.js"],"names":["React","Component","BackButton","SaveButton","ResetButton","Quant","TripNames","NavLink","TripDates","ItemTypes","TripTravelers","NewItemName","NewItemBrand","ItemImage","ServingQuant","ServingUnit","ServingWeight","CalsPerServing","DEFAULTITEM","ItemAdjust","constructor","props","selectTrip","selectedTrip","tripName","name","tripDates","trip_dates","tripTravelers","traveler_names","setState","adjustQuant","input","id","quantInput","state","selectedTripId","serving_qty","render","trips","itemTypes","onSubmitForm","e","item","selectedItem","console","log","image","food_name","brand","brand_name","quant","Math","round","unit","serving_unit","weight","serving_weight_grams","calsPs","calsPerServing","totalWeight","totalCalnf","totalCal","toFixed","replace","inputValue","defaultProps"],"mappings":"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","sourcesContent":["import \"../Font/Font.css\";\nimport \"../FormElements/FormElements.css\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../FormElements/BackButton\";\n\nimport SaveButton from \"../FormElements/SaveButton\";\nimport ResetButton from \"../FormElements/ResetButton\";\nimport Quant from \"../CustomItem/Quant\";\nimport TripNames from \"../CustomItem/TripNames\";\nimport \"../Tables/Tables.css\";\nimport { NavLink } from \"react-router-dom\";\nimport TripDates from \"../TripDetails/TripDates\";\nimport ItemTypes from \"../CustomItem/ItemTypes\";\nimport TripTravelers from \"../TripDetails/TripTravelers\";\nimport NewItemName from \"../CustomItem//NewItemName\";\nimport NewItemBrand from \"../CustomItem/NewItemBrand\";\nimport ItemImage from \"../ItemDetails/ItemImage\"\nimport ServingQuant from \"../ItemDetails/ServingQuant\"\nimport ServingUnit from \"../ItemDetails/ServingUnit\"\nimport ServingWeight from \"../ItemDetails/ServingWeight\"\nimport CalsPerServing from \"../ItemDetails/CalsPerServing\"\n\n\nimport { DEFAULTITEM } from \"../Defaults\";\n\n\nclass ItemAdjust extends Component {\n  static defaultProps = {\n    item:  {DEFAULTITEM},\n    selectedTrip: [],\n    quant: \"\",\n    id: \"\",\n    unit: \"\",\n    weight: 1,\n    calsPs: null,\n    serving_qty: null,\n\n   \n\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tripName: \"\",\n      selectedTripId: \"\",\n      selectedTrip: {},\n      tripDates: [],\n      quantInput: null,\n      id: \"\",\n      serving_qty: null,\n    };\n  }\n \n  selectTrip = (selectedTrip) => {\n    const tripName = selectedTrip.name\n    const tripDates = selectedTrip.trip_dates\n    const tripTravelers = selectedTrip.traveler_names\n    this.setState({\n      selectedTrip: selectedTrip,    \n      tripName: tripName,\n      tripDates: tripDates,\n      tripTravelers: tripTravelers\n    });\n  };\n\n  adjustQuant = (input, id) => {\n    \n    this.setState({\n      quantInput: input,\n      id: id\n    });\n  };\n\n  render() {\n  \n    const trips = this.props.trips;      \n    const itemTypes = this.props.itemTypes;\n    const onSubmitForm = (e) => {};\n    const item = this.props.selectedItem;\n    console.log(item)\n    const image = item.image\n    const name = item.food_name;\n    const brand = !item.brand_name ? \"common\" : item.brand_name;\n    const quant = Math.round(item.serving_qty);\n    const unit = item.serving_unit\n    const weight = Math.round(item.serving_weight_grams);\n    const calsPs = Math.round(item.calsPerServing);\n    const totalWeight = (quant * weight)\n    const totalCalnf = (quant * calsPs)\n    const totalCal = totalCalnf.toFixed(0)\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n\n    \n    return (\n      <section className=\"filterForm\">\n        <BackButton/>\n            <div className= \"adjustImage\">\n            <ItemImage \n            image = {image}\n            />\n            </div>\n        <form id=\"filter\" onSubmit={onSubmitForm} className = \"whiteBackground\">\n          <h2 className=\"montebello black\">Customize your item!</h2>\n        \n\n          <div className=\"filterButtonContainer\">\n            <NavLink to={`/search-results`}>\n              <SaveButton />\n            </NavLink>\n            <ResetButton/>\n            \n          </div>\n\n          <div>\n            <div className=\"newItems\">\n              <NewItemName\n              name = {name}\n              />\n            </div>\n            <div className=\"newItems\">\n              <NewItemBrand\n              brand = {brand}\n              />\n            </div>\n\n            <div className=\"calcBox\">\n              <div className=\"inputsContainer\">\n                <div className=\"inputBox\">\n                  <label\n                    htmlFor=\"custom-item-quantity\"\n                    className=\"labelWidth black\"\n                  >\n                    Serving Quantity\n                  </label>\n                  <p className=\"dataInput\">\n                  <ServingQuant \n                    quant = {quant}\n                    id = {item.id}\n                    handleAdjustQuant = {(inputValue, id) =>\n                      this.adjustQuant(inputValue, id)\n                    }\n                    />\n                  </p>\n                </div>\n\n                <div className=\"inputBox\">\n                  <label\n                    htmlFor=\"custom-item-unit\"\n                    className=\"labelWidth black\"\n                  >\n                    Serving unit\n                  </label>\n                  <p className=\"textInput\">\n                  <ServingUnit unit={unit}/>\n                  </p>\n                </div>\n\n                <div className=\"inputBox\">\n                  <label\n                    htmlFor=\"custom-item-weight\"\n                    className=\"labelWidth black\"\n                  >\n                    Weight per serving\n                  </label>\n                  <p className=\"dataInput\">\n                  <ServingWeight\n                   weight = {weight}\n                   result = {Math.round(this.state.quantInput * item.serving_weight_grams )}\n                   />\n    \n                  </p>\n                </div>\n\n                <div className=\"inputBox\">\n                  <label\n                    htmlFor=\"custom-item-calories\"\n                    className=\"labelWidth black\"\n                  >\n                    Calories per serving\n                  </label>\n                  <p className=\"dataInput\">\n                  <CalsPerServing\n                    calories =\n                    {calsPs}\n                    result = {Math.round(this.state.quantInput * item.calsPerServing )}\n                      />\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"resultsContainer\">\n                <div className=\"resultBox\">\n                  <label\n                    htmlFor=\"custom-item-total-weight\"\n                    className=\"labelWidth black\"\n                  >\n                    Total Weight\n                  </label>\n                  <p className=\"dataResult blackBackground white\">\n                    {totalWeight}\n                  </p>\n                </div>\n\n                <div className=\"resultBox\">\n                  <label\n                    htmlFor=\"custom-item-total-cal\"\n                    className=\"labelWidth black\"\n                  >\n                    Total Calories\n                  </label>\n                  <p className=\"dataResult blackBackground white\">{totalCal}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"filterContainer\">\n    <h3 className=\"filterCategory\">Trip</h3>\n            <TripNames \n            trips={trips}\n            handleSelectTrip={(selectedTrip) =>\n              this.selectTrip(selectedTrip)\n            }\n            />\n\n            <h3 className=\"filterCategory\">Dates</h3>\n            <TripDates \n            tripDates={this.state.tripDates}/>\n\n            <h3 className=\"filterCategory\">Type</h3>\n            <ItemTypes itemTypes={itemTypes}/>\n\n            <h3 className=\"filterCategory\">Traveler</h3>\n            <TripTravelers tripTravelers={this.state.tripTravelers}/>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default ItemAdjust;\n"]},"metadata":{},"sourceType":"module"}