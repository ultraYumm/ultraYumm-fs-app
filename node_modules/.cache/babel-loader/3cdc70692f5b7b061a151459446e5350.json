{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/CustomItem/CalResult.js\";\nimport React, { Component } from 'react';\nimport '../Font/Font.css';\nimport '../FormElements/FormElements.css';\nimport \"../Tables/Tables.css\";\nimport { DEFAULTITEM } from \"../Defaults\";\n\nclass CalResult extends Component {\n  render() {\n    const result = this.props.result;\n    const formatedResult = resulttoFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n\n    const placeholder = () => {\n      const num = this.props.placeholder;\n      const formatedNum = num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n\n      if (isNaN(num)) {\n        return 1;\n      }\n\n      return formatedNum;\n    };\n\n    console.log(placeholder());\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dataResult black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }, isNaN(result) ? placeholder() : formatedResult);\n  }\n\n}\n\nCalResult.defaultProps = {\n  result: 1\n};\nexport default CalResult;","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/CustomItem/CalResult.js"],"names":["React","Component","DEFAULTITEM","CalResult","render","result","props","formatedResult","resulttoFixed","replace","placeholder","num","formatedNum","toFixed","isNaN","console","log","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAO,kCAAP;AACA,OAAO,sBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAKA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAOhCG,EAAAA,MAAM,GAAG;AAEV,UAAMC,MAAM,GAAI,KAAKC,KAAL,CAAWD,MAA3B;AACA,UAAME,cAAc,GAAGC,aAAa,CAAC,CAAD,CAAb,CACtBC,OADsB,CACd,yBADc,EACa,KADb,CAAvB;;AAEA,UAAMC,WAAW,GAAG,MAAM;AACvB,YAAMC,GAAG,GAAG,KAAKL,KAAL,CAAWI,WAAvB;AACA,YAAME,WAAW,GAAGD,GAAG,CAACE,OAAJ,CAAY,CAAZ,EACnBJ,OADmB,CACX,yBADW,EACgB,KADhB,CAApB;;AAIA,UAAIK,KAAK,CAACH,GAAD,CAAT,EAAgB;AACZ,eAAO,CAAP;AACH;;AAED,aAAOC,WAAP;AAAmB,KAVtB;;AAYDG,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,EAAvB;AAKI,wBACO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSI,KAAK,CAACT,MAAD,CAAL,GAAeK,WAAW,EAA1B,GAAgCH,cADzC,CADP;AAIQ;;AAjCsB;;AAA5BJ,S,CAEKc,Y,GAAe;AAClBZ,EAAAA,MAAM,EAAE;AADU,C;AAoC1B,eAAeF,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../Font/Font.css';\nimport '../FormElements/FormElements.css';\nimport \"../Tables/Tables.css\";\nimport { DEFAULTITEM } from \"../Defaults\";\n\n\n\n\nclass CalResult extends Component {\n\n    static defaultProps = {       \n        result: 1,\n       \n      }\n     \n  render() {\n      \n const result  = this.props.result\n const formatedResult = resulttoFixed(0)\n .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n const placeholder = () => {\n    const num = this.props.placeholder\n    const formatedNum = num.toFixed(0)\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n    \n   \n    if (isNaN(num)) {\n        return 1\n    }\n\n    return formatedNum}\n\nconsole.log(placeholder())\n\n\n \n\n    return (\n           <p className=\"dataResult black\">\n                   {isNaN(result)? placeholder() : (formatedResult)}\n                  </p>\n          )}\n  \n}\n  \n\nexport default CalResult"]},"metadata":{},"sourceType":"module"}