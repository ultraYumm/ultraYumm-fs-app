{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/coding/ultrayumm-fs-app/src/CustomItem/NewItemName.js\";\nimport React, { Component } from \"react\";\nimport \"../Font/Font.css\";\nimport \"../FormElements/FormElements.css\";\nimport { renderToString } from 'react-dom/server';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass NewItemName extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.buildHandleKeyUp = setter => e => {\n      const existingId = this.props.id;\n\n      const id = () => {\n        if (existingId === \"\") {\n          var newId = uuidv4();\n          return newId;\n        }\n\n        return existingId;\n      };\n\n      e.preventDefault();\n      const input = e.currentTarget.value;\n      setter(input, id());\n      this.props.handleAdjustName(input, id());\n    };\n  }\n\n  componentDidMount() {\n    const name = this.props.name;\n    const existingId = this.props.id;\n    this.props.handleAdjustName(name, existingId);\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    const name = this.props.name;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"custom-item-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"labelWidth white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Item name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"itemName\",\n      className: \"redBackground white search\",\n      id: \"custom-item-name\",\n      defaultValue: name,\n      required: true,\n      onClick: this.buildHandleKeyUp(value => {\n        this.setState({\n          food_name: value\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nNewItemName.defaultProps = {\n  name: \"Pink salt\",\n  id: \"\"\n};\nexport default NewItemName;","map":{"version":3,"sources":["/Users/Stephanie/coding/ultrayumm-fs-app/src/CustomItem/NewItemName.js"],"names":["React","Component","renderToString","v4","uuidv4","NewItemName","buildHandleKeyUp","setter","e","existingId","props","id","newId","preventDefault","input","currentTarget","value","handleAdjustName","componentDidMount","name","componentWillUnmount","render","setState","food_name","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAO,kCAAP;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAiBlCK,gBAjBkC,GAiBfC,MAAM,IAAKC,CAAD,IAAO;AAGlC,YAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,EAA9B;;AAEA,YAAMA,EAAE,GAAI,MAAM;AAChB,YAAIF,UAAU,KAAK,EAAnB,EACA;AAAC,cAAIG,KAAK,GAAGR,MAAM,EAAlB;AACD,iBAAOQ,KAAP;AAAa;;AACb,eAAOH,UAAP;AACC,OALH;;AAQAD,MAAAA,CAAC,CAACK,cAAF;AACA,YAAMC,KAAK,GAAGN,CAAC,CAACO,aAAF,CAAgBC,KAA9B;AAECT,MAAAA,MAAM,CAACO,KAAD,EAAQH,EAAE,EAAV,CAAN;AACD,WAAKD,KAAL,CAAWO,gBAAX,CAA4BH,KAA5B,EAAmCH,EAAE,EAArC;AACA,KAnCgC;AAAA;;AAQlCO,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAG,KAAKT,KAAL,CAAWS,IAAxB;AACA,UAAMV,UAAU,GAAG,KAAKC,KAAL,CAAWC,EAA9B;AAEA,SAAKD,KAAL,CAAWO,gBAAX,CAA4BE,IAA5B,EAAkCV,UAAlC;AAED;;AAuBAW,EAAAA,oBAAoB,GAAG,CAAE;;AAK1BC,EAAAA,MAAM,GAAG;AAGP,UAAMF,IAAI,GAAG,KAAKT,KAAL,CAAWS,IAAxB;AAKA,wBAEI;AAAO,MAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,SAAS,EAAC,4BAHZ;AAIE,MAAA,EAAE,EAAC,kBAJL;AAKE,MAAA,YAAY,EAAGA,IALjB;AAKuB,MAAA,QAAQ,MAL/B;AAQE,MAAA,OAAO,EAAI,KAAKb,gBAAL,CAAuBU,KAAD,IAAW;AAE1C,aAAKM,QAAL,CACE;AAACC,UAAAA,SAAS,EAAEP;AAAZ,SADF;AAKD,OAPU,CARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFJ;AA0BD;;AA5EiC;;AAA9BX,W,CAEGmB,Y,GAAe;AACpBL,EAAAA,IAAI,EAAG,WADa;AAEpBR,EAAAA,EAAE,EAAE;AAFgB,C;AA6ExB,eAAeN,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Font/Font.css\";\nimport \"../FormElements/FormElements.css\";\nimport { renderToString } from 'react-dom/server';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass NewItemName extends Component {\n\n  static defaultProps = {\n    name:  \"Pink salt\",\n    id: \"\"\n  }\n  \n\n  componentDidMount() {\n    const name = this.props.name;\n    const existingId = this.props.id\n\n    this.props.handleAdjustName(name, existingId)\n\n  }\n\n  \n  buildHandleKeyUp = setter => (e) => {\n\n    \n    const existingId = this.props.id\n\n    const id  = () => {\n      if (existingId === \"\")\n      {var newId = uuidv4()\n      return newId} \n      return existingId\n      }\n\n     \n    e.preventDefault() \n    const input = e.currentTarget.value\n   \n     setter(input, id());\n    this.props.handleAdjustName(input, id())\n   }\n\n   componentWillUnmount() {}\n\n  \n\n\n  render() {\n\n    \n    const name = this.props.name;\n   \n    \n\n\n    return (\n     \n        <label htmlFor=\"custom-item-name\">\n          <span className=\"labelWidth white\">Item name</span>\n          <input\n            type=\"text\"\n            name=\"itemName\"\n            className=\"redBackground white search\"\n            id=\"custom-item-name\"\n            defaultValue= {name} required\n            \n\n            onClick = {this.buildHandleKeyUp((value) => {\n      \n              this.setState(\n                {food_name: value\n                }\n              )\n\n            })}\n\n\n          />\n        </label>\n   \n    );\n  }\n}\n\nexport default NewItemName;\n"]},"metadata":{},"sourceType":"module"}